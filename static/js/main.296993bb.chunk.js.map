{"version":3,"sources":["components/Navbar.js","components/Landing.js","Hooks/useFetch.js","components/BookCard.js","components/UserLanding.js","components/AdminLanding.js","components/NotFound.js","components/ListBook.js","components/SearchLanding.js","components/AddBooks.js","App.js","index.js"],"names":["Navbar","className","to","style","marginLeft","Landing","src","alt","useFetch","url","useState","data","setData","isPending","setIsPending","error","setError","useEffect","abortCont","AbortController","setTimeout","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort","REACT_APP_URL","process","BookCard","props","book","title","yop","author","availableCopies","handleDecrease","Math","max","id","method","updateTable","headers","body","JSON","stringify","onClick","timesBought","updateBooks","UserLanding","booksData","setBooksData","sort","a","b","slice","map","AdminLanding","NotFound","ListBook","user","deleteItem","SearchLanding","usertype","useParams","authorName","setAuthorName","setTitle","startP","setStartP","startE","setStartE","processToRules","response","updatedBooks","forEach","toUpperCase","push","onSubmit","e","preventDefault","htmlFor","type","value","onChange","target","AddBooks","setYop","setAvailableCopies","recordAdded","setRecordAdded","addRecord","placeholder","required","App","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.296993bb.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\n\nconst Navbar = () => {\n    return (\n        <div className=\"navbar\">\n            <div className=\"header\">\n                <Link to='/'> <i className=\"fas fa-book\"></i></Link>\n                <h2><Link to='/'>Books Management System</Link></h2>\n            </div>\n            <div style={{ marginLeft: 'auto' }}></div>\n            <div className=\"navbar-content\"><Link to=\"/\">Home</Link></div>\n            <div className=\"navbar-content\"><Link to=\"/pricing\">Pricing</Link></div>\n            <div className=\"navbar-content\"><Link to=\"/contact\">Contact Us</Link></div>\n        </div>\n    );\n}\n\nexport default Navbar;","import { Link } from \"react-router-dom\";\n\nconst Landing = () => {\n    return (\n        <div className=\"blocks\">\n            <div className=\"block-1\">\n                <p>Creator: Mayank Bist</p>\n                <h1>Manage Books</h1>\n                <div className=\"button-group\">\n                    <button className=\"btn\"><Link to='/user'>Enter As User</Link></button>\n                    <button className=\"btn\"><Link to='/admin'>Enter As Admin</Link></button>\n                </div>\n            </div>\n            <div className=\"block-2\">\n                <img className=\"landing-logo\"\n                    src=\"https://raw.githubusercontent.com/mayankbist45/Single_Page_Web_Template/main/assets/header-img.png\"\n                    alt=\"Book Cover\" />\n            </div>\n        </div>\n    );\n}\n\nexport default Landing;","import { useState, useEffect } from \"react\";\n\nconst useFetch = (url) => {\n    const [data, setData] = useState(null);\n    const [isPending, setIsPending] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const abortCont = new AbortController();\n\n        setTimeout(() => {\n            fetch(url, { signal: abortCont.signal })\n                .then(res => {\n                    if (!res.ok) {\n                        throw Error('Could Not fetch the data for that resource');\n                    }\n                    return res.json();\n                })\n                .then((data) => {\n                    setData(data);\n                    setIsPending(false);\n                    setError(null);\n                })\n                .catch(err => {\n                    if (err.name === 'AbortError') {\n                        console.log('fetch aborted')\n                    }\n                    else {\n                        setError(err.message);\n                        setIsPending(false);\n                    }\n                })\n        }, 1000);\n\n        return () => abortCont.abort();\n    }, [url]);\n\n    return { data, isPending, error };\n}\n\nexport default useFetch;","const { REACT_APP_URL } = process.env;\n\nconst BookCard = (props) => {\n    const { title, yop, author, availableCopies } = props.book;\n    const book = props.book;\n\n    const issueBook = () => {\n        book.timesBought++;\n        handleDecrease();\n        props.updateBooks();\n    }\n\n    const handleDecrease = () => {\n        book.availableCopies = Math.max(0, book.availableCopies - 1);\n        if (book.availableCopies === 0) {\n            fetch(REACT_APP_URL + '/' + book.id, {\n                method: \"DELETE\",\n            }).then(props.updateTable);\n        }\n        else {\n            fetch(REACT_APP_URL + '/' + book.id, {\n                method: \"PUT\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(book)\n            }).then(props.updateTable);\n        }\n    }\n\n    return (\n        <div className=\"book-container\">\n            <div className=\"book-heading\">\n                <h1>{title}</h1>\n                <p>Written By : {author}</p>\n            </div>\n            <hr />\n            <div className=\"book-details\">\n                <p className=\"text-mute\">Year Of Publication: {yop}</p>\n                <p className=\"text-mute\"> Available Copies: {availableCopies}</p>\n            </div>\n\n            <div>\n                <button className=\"button-buy\" onClick={issueBook}>Issue this book</button>\n            </div>\n        </div>\n    );\n}\n\nexport default BookCard;","import React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport useFetch from \"../Hooks/useFetch\";\nimport BookCard from \"./BookCard\";\n\nconst { REACT_APP_URL } = process.env;\n\nconst UserLanding = () => {\n    const { data, isPending } = useFetch(REACT_APP_URL);\n    const [booksData, setBooksData] = useState([]);\n\n    useEffect(() => {\n        if (data) {\n            data.sort((a, b) => b.timesBought - a.timesBought)\n            setBooksData(data.slice(0, 4));\n        }\n    }, [data]);\n\n    const updateBooks = () => {\n        fetch(REACT_APP_URL)\n            .then((data) => data.json())\n            .then((data) => {\n                data.sort((a, b) => b.timesBought - a.timesBought)\n                setBooksData(data.slice(0, 4))\n            })\n    }\n\n    return (\n        <div>\n            <div className=\"container\">\n                <div className=\"container-1\">\n                    <p>We have handpicked some of the best books for you.</p>\n                    <h1>Our Top Picks</h1>\n                    <button className=\"btn\"><Link to=\"/search/user\">SEARCH YOUR FAVOURITE BOOKS</Link></button>\n                </div>\n                <div className=\"container-2\">\n                    {isPending && <h2>Loading...</h2>}\n                    {!isPending && booksData.map((book) => <BookCard book={book} key={book.id} updateBooks={updateBooks} />)}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default UserLanding;","import { Link } from \"react-router-dom\";\n\nconst AdminLanding = () => {\n    return (\n        <div className=\"container\">\n            <div className=\"container-1\" id=\"admin-container\">\n                <p>ADD OR MODIFY THE BOOKS DATABASE SEAMLESSLY</p>\n                <h1>Welcome to the admin Panel</h1>\n                <button className=\"btn\"><Link to=\"/search/admin\">Explore The Database</Link></button>\n                <button className=\"btn\"><Link to=\"/add\">Add More Books</Link></button>\n            </div>\n            <div className=\"container-2\">\n            </div>\n        </div>\n    );\n}\n\nexport default AdminLanding;","import { Link } from \"react-router-dom\";\n\nconst NotFound = () => {\n    return (\n        <div className=\"not-found\">\n            <h1>Lost SomeWhere?</h1>\n            <button className=\"btn\"><Link to='/'>Back to the HomePage...</Link></button>\n        </div>\n    );\n}\n\nexport default NotFound;","const { REACT_APP_URL } = process.env;\n\nconst ListBook = (props) => {\n    const { book, user } = props;\n\n    const handleDelete = () => {\n        props.deleteItem(book.id);\n    }\n    const handleIncrease = () => {\n        book.availableCopies = book.availableCopies + 1;\n        fetch(REACT_APP_URL + book.id, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(book)\n        }).then(props.updateTable);\n    }\n\n    const issueBook = () => {\n        book.timesBought++;\n        handleDecrease();\n        props.updateBooks();\n    }\n\n    const handleDecrease = () => {\n        book.availableCopies = Math.max(0, book.availableCopies - 1);\n        if (book.availableCopies === 0) {\n            fetch(REACT_APP_URL + book.id, {\n                method: \"DELETE\",\n            }).then(props.updateTable);\n        }\n        else {\n            fetch(REACT_APP_URL + book.id, {\n                method: \"PUT\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(book)\n            }).then(props.updateTable);\n        }\n    }\n\n    return (\n        <tr>\n            <td>{book.title}</td>\n            <td>{book.author}</td>\n            <td>{book.yop}</td>\n            <td>\n                <div className=\"table-row-copy\">\n                    {user === 'admin' && <button onClick={handleDecrease}><i className=\"fas fa-minus\"></i></button>}\n                    {book.availableCopies}\n                    {user === 'admin' && <button onClick={handleIncrease}><i className=\"fas fa-plus\"></i></button>}\n                </div>\n            </td>\n            {user === 'admin' && <td><button className=\"delete-record-button\" onClick={handleDelete}>Delete</button></td>}\n            {user === 'user' && <td><button className=\"delete-record-button\" onClick={issueBook}>Issue Book</button></td>}\n        </tr>\n    );\n}\n\nexport default ListBook;","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport useFetch from \"../Hooks/useFetch\";\nimport ListBook from \"./ListBook\";\n\nconst { REACT_APP_URL } = process.env;\n\nconst SearchLanding = () => {\n    const { usertype } = useParams();\n    const { data, isPending } = useFetch(REACT_APP_URL);\n    const [booksData, setBooksData] = useState([]);\n    const [authorName, setAuthorName] = useState('');\n    const [title, setTitle] = useState('');\n    const [startP, setStartP] = useState(0);\n    const [startE, setStartE] = useState(9999);\n\n    const processToRules = (response) => {\n        const updatedBooks = [];\n        response.forEach((book) => {\n            if (title === '' || book.title.toUpperCase() === title.toUpperCase()) {\n                if (authorName === '' || book.author.toUpperCase() === authorName.toUpperCase()) {\n                    if (startP <= book.yop) {\n                        if (startE >= book.yop) {\n                            updatedBooks.push(book);\n                        }\n                    }\n                }\n            }\n        })\n        return updatedBooks;\n    }\n\n    const handleSearch = (e) => {\n        e.preventDefault();\n        fetch(REACT_APP_URL)\n            .then(data => data.json())\n            .then(response => {\n                setBooksData(processToRules(response));\n            });\n\n    }\n\n    const deleteItem = (id) => {\n        fetch(REACT_APP_URL + `/${id}`, {\n            method: \"DELETE\"\n        })\n            .then(() => fetch(REACT_APP_URL)\n                .then((data) => data.json())\n                .then((response) => setBooksData(processToRules(response))))\n    }\n\n    const updateTable = () => {\n        fetch(REACT_APP_URL)\n            .then((data) => data.json())\n            .then((response) => setBooksData(processToRules(response)));\n    }\n\n    useEffect(() => {\n        setBooksData(data);\n    }, [data])\n\n    return (\n        <div>\n            <div className=\"search-bar-container\">\n                <form onSubmit={handleSearch}>\n                    <div className=\"search-form\">\n                        <div className=\"search-form-box\">\n                            <label htmlFor=\"authorName\">Author Name: </label>\n                            <input type=\"text\" id=\"authorName\" value={authorName} onChange={(e) => setAuthorName(e.target.value)} />\n                        </div>\n                        <div className=\"search-form-box\">\n                            <label htmlFor=\"startP\">Year of Publication Start: </label>\n                            <input type=\"number\" id=\"startP\" value={startP} onChange={(e) => setStartP(e.target.value)} />\n                        </div>\n                        <div className=\"search-form-box\">\n                            <label htmlFor=\"startE\">Year of Publication End: </label>\n                            <input type=\"number\" id=\"startE\" value={startE} onChange={(e) => setStartE(e.target.value)} />\n                        </div>\n                        <div className=\"search-form-box\">\n                            <label htmlFor=\"title\">Title: </label>\n                            <input type=\"text\" id=\"title\" value={title} onChange={(e) => setTitle(e.target.value)} />\n                        </div>\n                    </div>\n                    <div className=\"search-button-container\">\n                        <div>\n                            <button className=\"search-button\">Search</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n            <div className=\"container-2\">\n                {isPending && <h2>Loading...</h2>}\n                {!isPending &&\n                    <table className=\"book-table\">\n                        <thead>\n                            <tr>\n                                <th>Title</th>\n                                <th>Author Name</th>\n                                <th>Year of Publication</th>\n                                <th>Available Copies</th>\n                                {usertype === 'admin' && <th>Delete Record</th>}\n                                {usertype === 'user' && <th>Issue Book</th>}\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {booksData.map((book) => <ListBook book={book} user={usertype} key={book.id} deleteItem={deleteItem} updateTable={updateTable} />)}\n                        </tbody>\n                    </table>\n                }\n            </div >\n        </div >\n    );\n}\n\nexport default SearchLanding;","import { useState } from \"react\";\nconst { REACT_APP_URL } = process.env;\n\nconst AddBooks = () => {\n    const [authorName, setAuthorName] = useState('');\n    const [title, setTitle] = useState('');\n    const [yop, setYop] = useState('');\n    const [availableCopies, setAvailableCopies] = useState('');\n    const [recordAdded, setRecordAdded] = useState(false);\n\n    const addRecord = (e) => {\n        e.preventDefault();\n        fetch(REACT_APP_URL, {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({ author: authorName, title, yop, availableCopies, timesBought: 0 })\n        }).then(() => {\n            setRecordAdded(true)\n            setTimeout(() => setRecordAdded(false), 1000)\n        })\n    };\n\n    return (\n        <div className=\"add-form\">\n            <div className=\"form-container\">\n                <div>\n                    <h1>Enter the Details of New Record</h1>\n                </div>\n                <form onSubmit={addRecord}>\n                    <div className=\"form-content\">\n                        <div>\n                            <input type=\"text\" placeholder=\"Author Name\" required value={authorName} onChange={(e) => setAuthorName(e.target.value)} />\n                        </div>\n                        <div>\n                            <input type=\"text\" placeholder=\"Title \" required value={title} onChange={(e) => setTitle(e.target.value)} />\n                        </div>\n                        <div>\n                            <input type=\"number\" placeholder=\"Year Of Publication\" required value={yop} onChange={(e) => setYop(e.target.value)} />\n                        </div>\n                        <div>\n                            <input type=\"number\" placeholder=\"Available Copies\" required value={availableCopies} onChange={(e) => setAvailableCopies(e.target.value)} />\n                        </div>\n                        <div>\n                            <button type='submit' onClick={addRecord}>Add Record</button>\n                        </div>\n                    </div>\n                </form>\n                {recordAdded && <h1 className=\"record-add\">Record Added</h1>}\n            </div>\n        </div>\n    );\n}\n\nexport default AddBooks;","import Navbar from \"./components/Navbar\";\nimport Landing from \"./components/Landing\";\nimport UserLanding from \"./components/UserLanding\";\nimport AdminLanding from \"./components/AdminLanding\";\nimport NotFound from \"./components/NotFound\";\nimport SearchLanding from \"./components/SearchLanding\";\nimport AddBooks from \"./components/AddBooks\";\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route path='/' exact>\n            <Landing />\n          </Route>\n          <Route path='/user'>\n            <UserLanding />\n          </Route>\n          <Route path='/admin'>\n            <AdminLanding />\n          </Route>\n          <Route path='/search/:usertype'>\n            <SearchLanding />\n          </Route>\n          <Route path='/add'>\n            <AddBooks />\n          </Route>\n          <Route path=\"*\">\n            <NotFound />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}